## Simulation setting

library(MASS)
library(stats)
library(dplyr)
library(gmm)
library(BB)
library(numDeriv)

source("./1_functions/0_basic_functions.R")
source("./1_functions/1_alphaPred.R")
source("./1_functions/2_betaPred.R")
source("./1_functions/3_1_gammaPred.R")
source("./1_functions/4_etaPred.R")
source("./1_functions/M1_data_generating.R")

seeds = 20221101
N = 8000
dat<- data_generate(seeds)
dat_obs <- select(dat, c('bias', 'C1', 'A', 'Z', 'S', 'Y', 'R'))
C <- dat_obs[,1:2]
A <- dat_obs[,3]
Z <- dat_obs[,4]
S <- dat_obs[,5]
Y <- dat_obs[,6]
R <- dat_obs[,7]
dim_status <- c(2,1,1,1,1,1)
# 2. Parameter Estimation ------------------------------------------------------
### pr(R = 1| S = 1 ,A, C, Y; alpha)
## initial values
ini_val_alpha <- c(0.1, 0.3, 2, 0.8) - c(0.1, 0.3, 2, 0.8)
ini_val_beta1 <- c(1, 0.9, 0.9) - c(1, 0.9, 0.9)
ini_val_beta01 <- c(0.1,-0.3, 1.2) - c(0.1,-0.3, 1.2)
ini_val_gamma_LL <- c(0.3, 0.9) - c(0.3, 0.9)
ini_val_gamma_LD <- c(0.2, 0.9) - c(0.2, 0.9)
ini_val_eta <- c(-0.1, 0.8) - c(-0.1, 0.8)

hat_alpha <-
  alphaPred(ini_val_alpha = ini_val_alpha,
            C,
            A,
            Z,
            S,
            Y,
            R,
            dim_status = dim_status)$coefficients

beta_estimate <-
  optim(
    c(ini_val_beta1, ini_val_beta01),
    Neg_MLE,
    data = select(dat_obs, c('bias', 'C1', 'A', 'Z', 'S')),
    method = "BFGS"
  )$par
hat_beta1 <- beta_estimate[1:(ncol(C) + 1)]
hat_beta01 <- beta_estimate[(ncol(C) + 2):length(beta_estimate)]
rm(list = c("beta_estimate"))


hat_gamma_BB<- gammaPred_BB(ini_val_gamma_LL,
                            ini_val_gamma_LD,
                            C,
                            A,
                            Z,
                            S,
                            Y,
                            R,
                            dim_status,
                            hat_alpha,
                            hat_beta1,
                            hat_beta01)
hat_gamma <- hat_gamma_BB$par

hat_gamma_LL <- hat_gamma[1:(length(hat_gamma)/2)]
hat_gamma_LD <- hat_gamma[(length(hat_gamma)/2+1):length(hat_gamma)]

### singular:: to check the gradients. rank(A*A^T) = rank(A), A is gradients of m_sum
hat_eta <- etaPred(
  ini_val_eta = ini_val_eta,
  C,
  A,
  Z,
  S,
  Y,
  R,
  dim_status = dim_status,
  hat_alpha = hat_alpha,
  hat_beta1 = hat_beta1,
  hat_beta01 = hat_beta01
)$coefficients

# 3. Estimation of causal effect ------------------------------------------
### step 1: Estimate E(Y_0 | G = LL)

# f(G = LL | A, C)
theta1_value <-  expit(as.matrix(cbind(C, A)) %*% hat_beta1)
theta01_value <- expit(as.matrix(cbind(C, A)) %*% hat_beta01)
fLLAC <- theta1_value * theta01_value
rm(list = c("theta01_value","theta1_value"))

# E f(G = LL | A,C)
ELLAC <- mean(fLLAC)

## E(Y_0 | G = LL ,A ,C) and E(Y_0 | G = LL)
E0LLAC <- expit(as.matrix(C) %*% hat_eta)
E0LL <- mean(E0LLAC * fLLAC) / ELLAC
print(E0LL)

### step 2: Estimate E(Y_1 | G = LL),
E1LLAC <- expit(as.matrix(C) %*% hat_gamma_LL)
E1LL <- mean(E1LLAC * fLLAC) / ELLAC
print(E1LL)

## step 3: Causal effect
CE <- E1LL - E0LL
print(CE)
## ????? Sometimes unsuccessful convergence????



